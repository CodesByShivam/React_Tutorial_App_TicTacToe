{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","style","display","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","moveNumber","description","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,2KACSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMtC,OACE,yBAAKG,MAAO,CAAE,kBAAmB,QAASC,QAAS,SACjD,yBAAKR,UAAU,aACZK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,IAErB,yBAAKT,UAAU,aACZK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,IAErB,yBAAKT,UAAU,aACZK,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,GAClBJ,KAAKI,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,kDAEJ,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAEDc,MAAQ,CACXC,QAAS,CACP,CACER,QAASS,MAAM,GAAGC,KAAK,QAG3BC,SAAS,EACTC,WAAY,GAVG,E,wDAcPd,GACV,IAAMU,EAAUT,KAAKQ,MAAMC,QAAQK,MAAM,EAAGd,KAAKQ,MAAMK,WAAa,GAE9DZ,EADUQ,EAAQA,EAAQM,OAAS,GACjBd,QAAQa,QAE5BE,EAAgBf,IAAYA,EAAQF,KAIxCE,EAAQF,GAAKC,KAAKQ,MAAMI,QAAU,IAAM,IAExCZ,KAAKiB,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CAAEjB,QAASA,KACpCW,SAAUZ,KAAKQ,MAAMI,QACrBC,WAAYJ,EAAQM,Y,6BAIjBI,GACLnB,KAAKiB,SAAS,CACZJ,WAAYM,EACZP,QAAUO,EAAO,IAAO,M,+BAIlB,IAiBJC,EAjBG,OAEDX,EAAUT,KAAKQ,MAAMC,QACrBY,EAAUZ,EAAQT,KAAKQ,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQpB,SAEjCsB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAIC,EAAcD,EAChB,qBAAuBA,EAAa,aAEtC,OACE,wBAAIE,IAAKF,GACP,4BAAQ7B,QAAS,kBAAM,EAAKgC,OAAOH,KAAcC,OAYvD,OALEN,EADEE,EACO,WAAaA,EAEb,iBAAmBtB,KAAKQ,MAAMI,QAAU,IAAM,KAIvD,yBAAKjB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASoB,EAAQpB,QACjBL,QAAS,SAACG,GAAQ,EAAK8B,YAAY9B,OAGvC,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,eAAeyB,GAC9B,4BAAKG,S,GA3EIlB,IAAMC,WAyFzB,SAASU,EAAgBf,GAWvB,IAVA,IAAM6B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA/B,EAAI,EAAGA,EAAI+B,EAAMf,OAAQhB,IAAK,CAAC,IAAD,cACnB+B,EAAM/B,GADa,GAC9BgC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIhC,EAAQ8B,IAAM9B,EAAQ8B,KAAO9B,EAAQ+B,IAAM/B,EAAQ8B,KAAO9B,EAAQgC,GACpE,OAAOhC,EAAQ8B,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,W","file":"static/js/main.e3a0f8c1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </ button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div style={{ \"justify-content\": \"right\", display: \"grid\" }}>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        }\n      ],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      history: history.concat([{ squares: squares, }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, moveNumber) => {\n      let description = moveNumber ?\n        'Goto move number: ' + moveNumber : 'Reset Game';\n\n      return (\n        <li key={moveNumber}>\n          <button onClick={() => this.jumpTo(moveNumber)}>{description}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => { this.handleClick(i); }}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"game-status\">{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}